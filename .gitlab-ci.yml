stages:
  - release
  - deploy

# build:
#   stage:         release
#   image:         docker:stable
#   extends:       .devops
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_DRIVER: overlay2
#   script:
#     - docker_build
#   artifacts:
#     paths:
#       - imageid.txt

heroku:
  stage:           deploy
  image:           docker:stable
  extends:         .devops
  services:
    - docker:dind
  variables:
    DOCKER_HOST:   tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - heroku_deploy

.devops:
  before_script:
    - |
      function docker_login() {
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      }

      function docker_build() {
        docker build --iidfile imageid.txt --pull -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} .
        docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
      }

      function heroku_deploy() {
        apk add --update --no-cache curl
        # docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
        # docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} ${HEROKU_REGISTRY}
        ###
        docker build --iidfile imageid.txt --pull -t ${HEROKU_REGISTRY} .
        ###
        docker login -u _ -p ${HEROKU_API_KEY} registry.heroku.com
        docker push ${HEROKU_REGISTRY}
        curl \
          -X PATCH \
          https://api.heroku.com/apps/${HEROKU_APP}/formation \
          --header "Content-Type: application/json" \
          --header "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          --header "Authorization: Bearer ${HEROKU_API_KEY}" \
          --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
      }
